name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]

# Prevent overlapping deploys
concurrency:
  group: swa-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
          lfs: false

      - name: Build & Deploy to Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          # üîê Required: SWA deployment token (from Portal > Deployment Token)
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_OCEAN_0EC32B100 }}

          # üü¶ PR annotations / comments
          repo_token: ${{ secrets.GITHUB_TOKEN }}

          # üöÄ Deploy action
          action: upload

          # üìÅ Paths
          app_location: frontend/skilllink-frontend
          api_location: ""          # no Azure Functions
          output_location: build    # CRA build folder

          # (optional) Explicit build command if needed:
          # app_build_command: npm ci && npm run build
        env:
          # üåê Build-time env for your React app (CRA bakes this into bundle)
          # Prefer a GitHub "Variable" named REACT_APP_API_BASE, else hardcode:
          REACT_APP_API_BASE: ${{ vars.REACT_APP_API_BASE }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close PR Environment
    steps:
      - name: Close PR Environment
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_OCEAN_0EC32B100 }}
          action: close
