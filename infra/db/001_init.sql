CREATE TABLE Requests (
    RequestId INT AUTO_INCREMENT PRIMARY KEY,
    LearnerId INT NOT NULL,
    SkillName VARCHAR(100) NOT NULL,
    Topic VARCHAR(100) NOT NULL,
    Status ENUM('OPEN','MATCHED','COMPLETED','CANCELLED') DEFAULT 'OPEN',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Description VARCHAR(255)
);


CREATE TABLE Sessions (
    SessionId INT AUTO_INCREMENT PRIMARY KEY,
    RequestId INT NOT NULL,
    TutorId INT NOT NULL,
    ScheduledAt DATETIME,
    Status ENUM('PENDING','CONFIRMED','COMPLETED','CANCELLED') DEFAULT 'PENDING',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (RequestId) REFERENCES Requests(RequestId)
);
CREATE TABLE Users (
    UserId INT AUTO_INCREMENT PRIMARY KEY,
    FullName VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    PasswordHash VARCHAR(255) NOT NULL,
    Role ENUM('Learner', 'Tutor', 'Admin') DEFAULT 'Learner',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE Users
  ADD COLUMN IsActive TINYINT(1) NOT NULL DEFAULT 1;
ALTER TABLE Users 
ADD COLUMN Bio TEXT NULL,
ADD COLUMN Location VARCHAR(100) NULL,
ADD COLUMN ProfilePicture VARCHAR(255) NULL;
ALTER TABLE Users ADD COLUMN ReadyToTeach TINYINT(1) NOT NULL DEFAULT 0;
ALTER TABLE Users
  ADD COLUMN EmailVerified TINYINT(1) NOT NULL DEFAULT 0,
  ADD COLUMN EmailVerificationToken VARCHAR(128) NULL,
  ADD COLUMN EmailVerificationExpires DATETIME NULL;



CREATE TABLE Skills (
    SkillId INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) UNIQUE NOT NULL,
    IsPredefined BOOLEAN DEFAULT FALSE
);

CREATE TABLE UserSkills (
    UserSkillId INT AUTO_INCREMENT PRIMARY KEY,
    UserId INT NOT NULL,
    SkillId INT NOT NULL,
    Level ENUM('Beginner', 'Intermediate', 'Advanced', 'Expert') NOT NULL,
    FOREIGN KEY (UserId) REFERENCES Users(UserId),
    FOREIGN KEY (SkillId) REFERENCES Skills(SkillId),
    UNIQUE(UserId, SkillId) -- prevent duplicate skills per user
);

CREATE TABLE AcceptedRequests (
    AcceptedRequestId INT AUTO_INCREMENT PRIMARY KEY,
    RequestId INT NOT NULL,
    AcceptorId INT NOT NULL,
    AcceptedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    Status VARCHAR(20) DEFAULT 'PENDING',
    FOREIGN KEY (RequestId) REFERENCES Requests(RequestId) ON DELETE CASCADE,
    FOREIGN KEY (AcceptorId) REFERENCES Users(UserId) ON DELETE CASCADE
);
ALTER TABLE AcceptedRequests 
ADD COLUMN ScheduleDate DATETIME NULL,
ADD COLUMN MeetingType VARCHAR(20) NULL,
ADD COLUMN MeetingLink VARCHAR(500) NULL;
